name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:  # allows to define output keys/identifiers which are accessible by other jobs
      script-file: ${{ steps.publish.outputs.script }} # identifier which is accessible by other job; expression ${...} with steps context value is used. Access data via step id.
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build  # produces artifacts
      - name: Publish JS filename # Step name for step to output filename so that other jobs can use it
        id: publish # id of the step required for access the key 'script' defined bellow -> script={}
        run: find dist/assets/*.js -type f -execdir echo 'script={}' >> $GITHUB_OUTPUT ';' # find the js file in the dist/assets folder and execute echo command to output the file name; script is the output name, $GITHUB_OUTPUT targets a special file created by GitHub in the environment in which the job runs where the output key-value pair is written to.
       #run: find dist/assets/*.js -type f -execdir echo '::set-output name=script::{}' ';' # other syntax to achieve job outputs -> will not be supported in the future anymore!!!
      - name: upload artifacts
        uses: actions/upload-artifact@v3  # action to upload artifacts -> https://github.com/marketplace/actions/upload-a-build-artifact
        with:
          name: dist-files  # name of the directory containing the artifacts
          path: dist # path to the artifacts directory
  deploy:
    needs: build  # must run after build job due to required artifact creation and upload
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3  # since the jobs run on own runners, this job has to download the produced artifacts (produced by "upload artifacts" step) -> https://github.com/marketplace/actions/download-a-build-artifact
        with:
          name: dist-files  # name of the directory containing the artifacts; downloads dist-files and unzips it
      - name: Output contents
        run: ls # lists all the content of the folder dist-files
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"  # access output idendifier script-file to output the file name published be the other job
      - name: Deploy
        run: echo "Deploying..."  # in real world this step stores the artifacts to a web server (web hosting provider is required, most provide their own action to upload files to them)

